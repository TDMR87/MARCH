<div id="counter">
    <div class="flex flex-column mt-6">
        <!-- Decrement Button -->
        <button class="p-3 rounded-md bg-cyan-600 hover:bg-cyan-700 dark:bg-sky-900 dark:hover:bg-sky-800"
                hx-post="counter/decrement"
                hx-trigger="click"
                hx-target="#counter"
                hx-swap="outerHTML"
                hx-ext='json-enc'
                hx-vals='@((Model with { Count = Model.Count - 1 }).ToJson())'>
            <span class="text-xl">
                <i class="fas fa-arrow-left"></i>
            </span>
        </button>

        <!-- Counter Value -->
        <div class="px-2 w-24 text-center">
            <span class="text-5xl font-bold">
                @Model.Count
            </span>
        </div>

        <!-- Increment Button -->
        <button class="p-3 rounded-md bg-cyan-600 hover:bg-cyan-700 dark:bg-sky-900 dark:hover:bg-sky-800"
                hx-post="counter/increment"
                hx-trigger="click"
                hx-target="#counter"
                hx-swap="outerHTML"
                hx-ext='json-enc'
                hx-vals='@((Model with { Count = Model.Count + 1 }).ToJson())'>
            <span class="text-xl">
                <i class="fas fa-arrow-right"></i>
            </span>
        </button>
    </div>

    <!-- Validation Message -->
    @if (ValidationContext.Errors.Any(e => e.PropertyName == nameof(Model.Count)))
    {
        <p class="text-red-500 mt-4">
            @ValidationContext.ValidationResults.Errors.First(e => e.PropertyName == nameof(Model.Count)).ErrorMessage
        </p>
    }
</div>


@code
{
    [Inject] public ValidationContext ValidationContext { get; set; } = new();

    [Parameter] public CounterModel Model { get; set; } = new();

    public record CounterModel
    {
        public int Count { get; set; }
        public bool IsIncrement { get; set; }
        public string ToJson() => JsonSerializer.Serialize(this);
    }
}